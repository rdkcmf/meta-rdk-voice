From d5bd7254c037a04a1139e192e088d3f3258c1c15 Mon Sep 17 00:00:00 2001
From: Artur Gebicz <a.gebicz@metrological.com>
Date: Mon, 29 Jun 2020 08:57:21 +0200
Subject: [PATCH] Build SampleApp as library

---
 source/modules/Alexa/SampleApp/CMakeLists.txt        |  6 +--
 source/.../include/SampleApp/SampleApplication.h     |  2 +-
 source/modules/Alexa/SampleApp/src/CMakeLists.txt    | 46 ++++++++++---------
 source/.../Alexa/SampleApp/src/SampleApplication.cpp |  3 +-
 source/.../SmartScreenSDKInterfaces/CMakeLists.txt   |  2 +-
 source/.../Alexa/build/cmake/PrepareInstall.cmake    | 11 +++--
 6 files changed, 39 insertions(+), 31 deletions(-)

diff --git a/source/modules/Alexa/SampleApp/CMakeLists.txt b/source/modules/Alexa/SampleApp/CMakeLists.txt
index b31f47b..c4adb48 100644
--- a/source/modules/Alexa/SampleApp/CMakeLists.txt
+++ b/source/modules/Alexa/SampleApp/CMakeLists.txt
@@ -1,7 +1,7 @@
 
-if ((PORTAUDIO AND GSTREAMER_MEDIA_PLAYER) OR (ANDROID_MEDIA_PLAYER AND ANDROID_MICROPHONE))
+if (GSTREAMER_MEDIA_PLAYER)
     cmake_minimum_required(VERSION 3.1 FATAL_ERROR)
-    project(SampleApp LANGUAGES CXX)
+    project(SmartScreenSampleApp LANGUAGES CXX)
 
     include(../build/BuildDefaults.cmake)
 
@@ -15,5 +15,5 @@ if ((PORTAUDIO AND GSTREAMER_MEDIA_PLAYER) OR (ANDROID_MEDIA_PLAYER AND ANDROID_
 
     add_subdirectory("src")
 else()
-    message("To build the sample app, please enable microphone and media player modules.")
+    message("To build the sample app, please enable media player modules.")
 endif()
diff --git a/source/modules/Alexa/SampleApp/include/SampleApp/SampleApplication.h b/source/modules/Alexa/SampleApp/include/SampleApp/SampleApplication.h
index 014d3d6..3beb38d 100644
--- a/source/modules/Alexa/SampleApp/include/SampleApp/SampleApplication.h
+++ b/source/modules/Alexa/SampleApp/include/SampleApp/SampleApplication.h
@@ -145,7 +145,7 @@ public:
             MediaPlayerCreateFunction createFunction);
     };
 
-private:
+protected:
     /**
      * Initialize a SampleApplication.
      *
diff --git a/source/modules/Alexa/SampleApp/src/SampleApplication.cpp b/source/modules/Alexa/SampleApp/src/SampleApplication.cpp
index a10467e..61c75d3 100644
--- a/source/modules/Alexa/SampleApp/src/SampleApplication.cpp
+++ b/source/modules/Alexa/SampleApp/src/SampleApplication.cpp
@@ -798,7 +798,8 @@ bool SampleApplication::initialize(
     std::shared_ptr<applicationUtilities::androidUtilities::AndroidSLESMicrophone> micWrapper =
         m_openSlEngine->createMicrophoneRecorder(sharedDataStream);
 #else
-#error "No audio input provided"
+    std::shared_ptr<applicationUtilities::resources::audio::MicrophoneInterface> micWrapper = nullptr;
+    ACSDK_CRITICAL(LX("Missing implemetation for the micWrapper"));
 #endif
     if (!micWrapper) {
         ACSDK_CRITICAL(LX("Failed to create PortAudioMicrophoneWrapper!"));
diff --git a/source/modules/Alexa/SmartScreenSDKInterfaces/CMakeLists.txt b/source/modules/Alexa/SmartScreenSDKInterfaces/CMakeLists.txt
index b12ac56..22cee2f 100644
--- a/source/modules/Alexa/SmartScreenSDKInterfaces/CMakeLists.txt
+++ b/source/modules/Alexa/SmartScreenSDKInterfaces/CMakeLists.txt
@@ -9,4 +9,4 @@ target_include_directories(SmartScreenSDKInterfaces INTERFACE
     "${SmartScreenSDKInterfaces_SOURCE_DIR}/include"
     "${SmartScreenSDKInterfaces_SOURCE_DIR}/test")
 
-asdk_install()
+asdk_install_interface()
diff --git a/source/modules/Alexa/build/cmake/PrepareInstall.cmake b/source/modules/Alexa/build/cmake/PrepareInstall.cmake
index bba980a..76986ab 100644
--- a/source/modules/Alexa/build/cmake/PrepareInstall.cmake
+++ b/source/modules/Alexa/build/cmake/PrepareInstall.cmake
@@ -13,7 +13,12 @@ endfunction()
 function(asdk_install)
     SET(PKG_CONFIG_LIBS "${PKG_CONFIG_LIBS} -l${PROJECT_NAME}" CACHE INTERNAL "" FORCE)
     install(TARGETS ${PROJECT_NAME} DESTINATION "${ASDK_LIB_INSTALL_DIR}")
-    install(DIRECTORY "${PROJECT_SOURCE_DIR}/include" DESTINATION "${ASDK_INCLUDE_INSTALL_DIR}")
+    install(DIRECTORY "${PROJECT_SOURCE_DIR}/include/" DESTINATION "${ASDK_INCLUDE_INSTALL_DIR}/include/SmartScreen/")
+endfunction()
+
+function(asdk_install_interface)
+    install(TARGETS ${PROJECT_NAME} DESTINATION "${ASDK_LIB_INSTALL_DIR}")
+    install(DIRECTORY "${PROJECT_SOURCE_DIR}/include/" DESTINATION "${ASDK_INCLUDE_INSTALL_DIR}/include/SmartScreen/")
 endfunction()
 
 # Function to install the target with list of include paths
@@ -21,7 +26,7 @@ function(asdk_install_multiple path_list)
     SET(PKG_CONFIG_LIBS "${PKG_CONFIG_LIBS} -l${PROJECT_NAME}" CACHE INTERNAL "" FORCE)
     install(TARGETS ${PROJECT_NAME} DESTINATION "${ASDK_LIB_INSTALL_DIR}")
     foreach(path IN LISTS path_list)
-        install(DIRECTORY ${path} DESTINATION "${ASDK_INCLUDE_INSTALL_DIR}")
+        install(DIRECTORY "${path}/" DESTINATION "${ASDK_INCLUDE_INSTALL_DIR}/include/SmartScreen")
     endforeach()
 endfunction()
 
@@ -37,7 +42,7 @@ if(BLUETOOTH_BLUEZ)
 endif()
 SET(PKG_CONFIG_LIBS         "-L\${libdir}" CACHE INTERNAL "" FORCE)
 SET(PKG_CONFIG_LIBDIR       "\${prefix}/lib")
-SET(PKG_CONFIG_INCLUDEDIR   "\${prefix}/include")
+SET(PKG_CONFIG_INCLUDEDIR   "\${prefix}/include/SmartScreen")
 SET(PKG_CONFIG_CFLAGS       "-I\${includedir}")
 
 # Set library and header files install directory
-- 
2.17.1

diff --git a/source/modules/Alexa/SampleApp/src/CMakeLists.txt b/source/modules/Alexa/SampleApp/src/CMakeLists.txt
index 9498e5f..e993c24 100644
--- a/source/modules/Alexa/SampleApp/src/CMakeLists.txt
+++ b/source/modules/Alexa/SampleApp/src/CMakeLists.txt
@@ -38,10 +38,12 @@ IF (HAS_EXTERNAL_MEDIA_PLAYER_ADAPTERS)
     endforeach(myfile)
 ENDIF()
 
-add_executable(SampleApp ${SampleApp_SOURCES})
-target_include_directories(SampleApp PUBLIC
+add_library(SmartScreenSampleApp ${SampleApp_SOURCES})
+set_property(TARGET SmartScreenSampleApp PROPERTY POSITION_INDEPENDENT_CODE ON)
+
+target_include_directories(SmartScreenSampleApp PUBLIC
+    "${SmartScreenSampleApp_SOURCE_DIR}/include"
     "${ASDK_INCLUDE_DIRS}"
-    "${SampleApp_SOURCE_DIR}/include"
     "${AudioResources_SOURCE_DIR}/include"
     "${RegistrationManager_SOURCE_DIR}/include"
     "${ESP_SOURCE_DIR}/include"
@@ -49,7 +51,7 @@ target_include_directories(SampleApp PUBLIC
     "${Utils_SOURCE_DIR}/include"
     "${Communication_SOURCE_DIR/include}")
 
-target_link_libraries(SampleApp
+target_link_libraries(SmartScreenSampleApp
     "${ASDK_LDFLAGS}"
     Communication
     AlexaPresentation
@@ -64,25 +66,25 @@ target_link_libraries(SampleApp
     "${PORTAUDIO_LIB_PATH}")
 
 if (PCC)
-    target_link_libraries(SampleApp AVSCommon)
+    target_link_libraries(SmartScreenSampleApp AVSCommon)
 endif()
 
 if (ANDROID)
-    target_include_directories(SampleApp PUBLIC "${AndroidUtilities}/include")
-    target_link_libraries(SampleApp AndroidUtilities)
+    target_include_directories(SmartScreenSampleApp PUBLIC "${AndroidUtilities}/include")
+    target_link_libraries(SmartScreenSampleApp AndroidUtilities)
     if (ANDROID_MEDIA_PLAYER)
-        target_include_directories(SampleApp PUBLIC "${AndroidSLESMediaPlayer}/include")
-        target_link_libraries(SampleApp AndroidSLESMediaPlayer)
+        target_include_directories(SmartScreenSampleApp PUBLIC "${AndroidSLESMediaPlayer}/include")
+        target_link_libraries(SmartScreenSampleApp AndroidSLESMediaPlayer)
     endif()
 endif()
 
 if (GSTREAMER_MEDIA_PLAYER)
-    target_include_directories(SampleApp PUBLIC "${MediaPlayer_SOURCE_DIR}/include")
-    target_link_libraries(SampleApp MediaPlayer)
+    target_include_directories(SmartScreenSampleApp PUBLIC "${MediaPlayer_SOURCE_DIR}/include")
+    target_link_libraries(SmartScreenSampleApp MediaPlayer)
 endif()
 
 if(KWD)
-    target_link_libraries(SampleApp KeywordDetectorProvider)
+    target_link_libraries(SmartScreenSampleApp KeywordDetectorProvider)
 endif()
 
 if(NOT WEBSOCKETPP_INCLUDE_DIR)
@@ -97,8 +99,8 @@ if(NOT ASIO_INCLUDE_DIR)
     endif()
 endif()
 
-target_compile_definitions(SampleApp PUBLIC ASIO_STANDALONE)
-target_include_directories(SampleApp PUBLIC
+target_compile_definitions(SmartScreenSampleApp PUBLIC ASIO_STANDALONE)
+target_include_directories(SmartScreenSampleApp PUBLIC
         "${ASIO_INCLUDE_DIR}"
         "${WEBSOCKETPP_INCLUDE_DIR}")
 
@@ -112,15 +114,15 @@ else()
     find_package(OpenSSL REQUIRED)
     add_definitions(-DENABLE_WEBSOCKET_SSL)
 
-    target_include_directories(SampleApp PUBLIC "${OPENSSL_INCLUDE_DIR}")
-    target_link_libraries(SampleApp
+    target_include_directories(SmartScreenSampleApp PUBLIC "${OPENSSL_INCLUDE_DIR}")
+    target_link_libraries(SmartScreenSampleApp
             "${OPENSSL_SSL_LIBRARY}"
             "${OPENSSL_CRYPTO_LIBRARY}")
 endif()
 
 
 if (${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
-    target_link_libraries(SampleApp
+    target_link_libraries(SmartScreenSampleApp
         "-rpath ${ASDK_LIBRARY_DIRS}"
         "-framework CoreAudio"
         "-framework AudioToolbox" 
@@ -128,7 +130,7 @@ if (${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
         "-framework CoreServices" 
         "-framework Carbon")
 elseif(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
-    target_link_libraries(SampleApp
+    target_link_libraries(SmartScreenSampleApp
       rt m pthread asound
       "-Wl,-rpath,${ASDK_LIBRARY_DIRS}")
 endif()
@@ -150,15 +152,17 @@ if(NOT YOGA_LIB_DIR)
 endif()
 
 if(APL_CORE)
-    target_include_directories(SampleApp PUBLIC
+    target_include_directories(SmartScreenSampleApp PUBLIC
             "${APLCORE_INCLUDE_DIR}"
             "${YOGA_INCLUDE_DIR}")
 
-    target_link_libraries(SampleApp ${APLCORE_LIB_DIR}/libapl.a)
-    target_link_libraries(SampleApp ${YOGA_LIB_DIR}/libyogacore.a)
+    target_link_libraries(SmartScreenSampleApp ${APLCORE_LIB_DIR}/libapl.a)
+    target_link_libraries(SmartScreenSampleApp ${YOGA_LIB_DIR}/libyogacore.a)
 
     set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wno-error -Wno-reorder")
     set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-error -Wno-reorder")
 
     add_definitions(-DAPL_CORE)
-endif()
\ No newline at end of file
+endif()
+
+asdk_install()
